Assume that class A extends class B, which extends class C. Also all the three classes implement
the method test(). How can a method in a class A invoke the test() method defined in class C
(without creating a new instance of class C).


package com.acadgild;

public class C {
	void test(){
		System.out.println("super class C");
	}
	}
  
  package com.acadgild;

public class B extends C  {
	void test(){
			super.test();
	}
  }
  
  package com.acadgild;

public class A extends B{
void test(){
		super.test();
	}
public static void main(String[] args) {
	A obj = new A();
	obj.test();
}
}

EXPECTED OUTPUT:
f. It is not possible to invoke test() method defined in C from a method in A.

WE CAN INVOKE test() in A only by invoking test() in B but directly we cant do that.



  
